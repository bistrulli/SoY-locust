version: '3.7'

services:
  # Gateway application
  gateway:
    image: icws24submission/gateway_icws24
    security_opt:
      - no-new-privileges:true
    restart: always
    environment:
      - MS_EXERCISE_URL=http://ms-exercise-nginx:5001
      - MS_OTHER_URL=http://ms-other-nginx:8080
      - TRAEFIK_INTERNAL=false
      - FORCE_TRAEFIK_ROUTING=false
      - PORT=8080
    env_file:
      - monolith-v5/variables.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.1"
          memory: 256M
    networks:
      - backend

  # Nginx proxy for Gateway
  gateway-nginx:
    image: nginx:alpine
    volumes:
      - ./nginx-config/gateway.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - backend
      - monitoring
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 64M
        reservations:
          cpus: "0.1"
          memory: 32M

  # Nginx Prometheus Exporter for Gateway
  gateway-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - '--nginx.scrape-uri=http://gateway-nginx/nginx_status'
      - '--web.listen-address=:9113'
    networks:
      - monitoring
    ports:
      - "9113:9113"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 32M

  # MS-Exercise application
  ms-exercise:
    image: icws24submission/exercise_icws24
    security_opt:
      - no-new-privileges:true
    restart: always
    env_file:
      - monolith-v5/variables.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.1"
          memory: 256M
    networks:
      - backend

  # Nginx proxy for MS-Exercise
  ms-exercise-nginx:
    image: nginx:alpine
    volumes:
      - ./nginx-config/ms-exercise.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
      - monitoring
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 64M
        reservations:
          cpus: "0.1"
          memory: 32M

  # Nginx Prometheus Exporter for MS-Exercise
  ms-exercise-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - '--nginx.scrape-uri=http://ms-exercise-nginx/nginx_status'
      - '--web.listen-address=:9114'
    networks:
      - monitoring
    ports:
      - "9114:9114"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 32M

  # MS-Other application
  ms-other:
    image: icws24submission/other_icws24
    security_opt:
      - no-new-privileges:true
    restart: always
    env_file:
      - monolith-v5/variables.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.1"
          memory: 256M
    networks:
      - backend

  # Nginx proxy for MS-Other
  ms-other-nginx:
    image: nginx:alpine
    volumes:
      - ./nginx-config/ms-other.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
      - monitoring
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 64M
        reservations:
          cpus: "0.1"
          memory: 32M

  # Nginx Prometheus Exporter for MS-Other
  ms-other-nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - '--nginx.scrape-uri=http://ms-other-nginx/nginx_status'
      - '--web.listen-address=:9115'
    networks:
      - monitoring
    ports:
      - "9115:9115"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 32M

  # Postgres database
  postgres:
    image: registry.gitlab.com/inria-mpl/soy/msa-postgres:1.0.1
    shm_size: 1g
    security_opt:
      - no-new-privileges:true
    restart: always
    env_file:
      - monolith-v5/variables.env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
    networks:
      - backend

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--web.listen-address=:9090'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
    networks:
      - monitoring
    ports:
      - "9090:9090"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

networks:
  monitoring:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true

volumes:
  prometheus_data: